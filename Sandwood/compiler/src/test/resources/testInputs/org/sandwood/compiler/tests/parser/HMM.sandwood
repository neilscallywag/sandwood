/*
 * Sandwood
 *
 * Copyright (c) 2019-2023, Oracle and/or its affiliates
 * 
 * Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
 */

package org.sandwood.compiler.tests.parser;

model HMM(boolean[] measured, int states) {

  double[] v = new double[states] <~ 0.1;
  double[][] m = dirichlet(v).sample(states);
	
  double[] bias = beta(1.0, 1.0).sample(states);

  int samples = measured.length;
  int[] st = new int[samples];
		
  st[0] = categorical(m[0]).sample();
 
  for(int i:[1..samples))
    st[i] = categorical(m[st[i - 1]]).sample();

  boolean[] flips = new boolean[samples];
  for(int j:[0..samples))
    flips[j] = bernoulli(bias[st[j]]).sample();

  flips.observe(measured);
}